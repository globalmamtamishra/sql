Problem 1 : The following query is given:

SELECT
  department_id
FROM
  employee
WHERE
  salary > 10000;

The query returns values for department_id for which salary is greater than 
10000. Using the result of this query as a subquery, display the names of all 
departments for which the above condition is met.
------>
SELECT
  e.department_id,d.department_name
FROM
  employee e,department d
WHERE
e.department_id=d.department_id AND
  e.salary > 10000;

Problem 2 : Please follow the steps below.
1. Create a query that returns the values for the job_id from the employee table 
where the salary is greater than 10,000.
2. Using the result of the previous query as a subquery, display the names of 
all positions for which the above condition is met.
-------->
select e.job_id, j.job_title 
from 
employee e, job j
WHERE 
e.job_id = j.job_id
and salary > 10000;


Problem 3 : The following query is given:

SELECT
  product_id,
  COUNT(*) AS number_of_orders
FROM
  sale
GROUP BY
  product_id;

Modify this query to display only the first three values for the product_id 
with the highest value for the number_of_orders column
------>
SELECT
  product_id,
  COUNT(*) AS number_of_orders
FROM
  sale
GROUP BY
  product_id 
  ORDER by number_of_orders DESC
  LIMIT 3;


Problem 4 : The following query is given:

SELECT
  product_id
FROM
  sale
GROUP BY
  product_id
ORDER BY
  COUNT(*) DESC
LIMIT
  3;

Display all data from the product table about the products returned by the 
above query

------------>
ANS:

SELECT
  *
FROM product p,
  sale s
  WHERE s.product_id=p.product_id
GROUP BY
  s.product_id
ORDER BY
  COUNT(*) DESC
LIMIT
  3;

Problem 5 : Group data from the sale table at product_id level. Calculate the number of 
orders for each product and assign the alias number_of_orders. Using the HAVING 
clause, display only those products that appeared once in the table (one order).
---->
Ans:
SELECT
  product_id,
  COUNT(*) AS number_of_orders
FROM
  sale
GROUP BY
  product_id
HAVING
  COUNT(*) == 1;

Problem 6 : Using the previous exercise and subqueries, create a query that displays all 
information about the products from the product table that were purchased only 
once (the sale table).
------>
ANS:
SELECT
  product.product_id,product.product_name,
  COUNT(*) AS number_of_orders
FROM
  sale ,product
  WHERE product.product_id=sale.product_id
  GROUP BY
sale.product_id
HAVING
  COUNT(*) == 1;


Problem 7 : The following query is given:

SELECT
  *
FROM
  product
WHERE
  product_id IN (
    SELECT
      product_id
    FROM
      sale
    GROUP BY
      product_id
    HAVING
      COUNT(*) == 1
  );
----->

Problem 8 : Modify this query so that the result only includes information for two columns:
* product_name
* list_price
----->
ANS:

SELECT
 product.product_name,product.list_price
FROM
  product
WHERE
  product_id IN (
    SELECT
      product_id
    FROM
      sale
    GROUP BY
      product_id
    HAVING
      COUNT(*) == 1
  );

